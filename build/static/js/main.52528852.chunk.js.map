{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","props","id","left","aside","style","transform","contextOpened","onClick","toggleContext","opened","onClose","before","asideContent","mode","fill","select","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","date","Date","getDay","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","today","ReactDOM","render","getElementById"],"mappings":"iwBAsDeA,EAvCF,SAACC,GAAD,OACZ,kBAAC,IAAD,CAAOC,GAAID,EAAMC,IAChB,kBAAC,IAAD,CACUC,KAAM,kBAAC,IAAD,OAEN,kBAAC,IAAD,CACEC,MAAO,kBAAC,IAAD,CAAgBC,MAAO,CAAEC,UAAU,UAAD,OAAYL,EAAMM,cAAgB,SAAW,IAA7C,QACzCC,QAASP,EAAMQ,eAAeR,EAAMM,gBAFtC,gBAOF,kBAAC,IAAD,CAAoBG,OAAQT,EAAMM,cAAeI,QAASV,EAAMQ,eAAeR,EAAMM,gBACnF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,OAAQ,kBAAC,IAAD,MACRC,aAA6B,QAAfZ,EAAMa,KAAiB,kBAAC,IAAD,CAAYC,KAAK,kBAAqB,KAC3EP,QAASP,EAAMe,OAAO,QAHxB,eAOA,kBAAC,IAAD,CACEJ,OAAQ,kBAAC,IAAD,MACRC,aAA6B,YAAfZ,EAAMa,KAAqB,kBAAC,IAAD,CAAYC,KAAK,kBAAqB,KAC/EP,QAASP,EAAMe,OAAO,YAHxB,2BCrBd,IAoCeC,EApCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEGG,GAFH,aAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,OAIsBN,oBAAS,GAJ/B,mBAIVX,EAJU,KAIKE,EAJL,OAKMS,mBAAS,sEALf,mBAKVJ,EALU,KAKJE,EALI,KAObS,EAbU,CAAC,qEAAe,qEAAe,6CAAW,iCAAS,6CAAW,6CAAW,+CAC1E,IAAIC,MAAOC,UAcxBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECX,EAAQW,GACRR,EAAU,MAHX,4CARe,sBACfM,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAMH,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMrB,GAAG,OAAO4C,GANP,SAAAC,GACV3B,EAAe2B,EAAEC,cAAcC,QAAQC,KAKdC,MAAO1B,EAAMlB,cAAeA,EAAeO,KAAMA,EAAML,cAAeA,EAAeO,OAAQA,MCtCxHc,IAAOC,KAAK,gBAEZqB,IAASC,OAAO,kBAAC,EAAD,MAASf,SAASgB,eAAe,W","file":"static/js/main.52528852.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\nimport PanelHeaderContent from '@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent';\nimport PanelHeaderContext from '@vkontakte/vkui/dist/components/PanelHeaderContext/PanelHeaderContext';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\n\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\nimport Icon28UsersOutline from '@vkontakte/icons/dist/28/users_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\nconst Home = (props) => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n            left={<PanelHeaderBack />}\n        >\n            <PanelHeaderContent\n              aside={<Icon16Dropdown style={{ transform: `rotate(${props.contextOpened ? '180deg' : '0'})` }} />}\n              onClick={props.toggleContext(!props.contextOpened)}\n            >\n              Communities\n            </PanelHeaderContent>\n          </PanelHeader>\n          <PanelHeaderContext opened={props.contextOpened} onClose={props.toggleContext(!props.contextOpened)}>\n            <List>\n              <Cell\n                before={<Icon28UsersOutline />}\n                asideContent={props.mode === 'all' ? <Icon24Done fill=\"var(--accent)\" /> : null}\n                onClick={props.select('all')}\n              >\n                Communities\n              </Cell>\n              <Cell\n                before={<Icon28SettingsOutline />}\n                asideContent={props.mode === 'managed' ? <Icon24Done fill=\"var(--accent)\" /> : null}\n                onClick={props.select('managed')}\n              >\n                Managed Communities\n              </Cell>\n            </List>\n        </PanelHeaderContext>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\ttoday: PropTypes.string.isRequired\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nfunction getWeekDay() {\n    var days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\n    var day = new Date().getDay();\n\n    return days[day];\n}\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [contextOpened, toggleContext] = useState(true);\n\tconst [mode, select] = useState('Понедельник')\n\n\tvar date = getWeekDay();\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' go={go} today={date} contextOpened={contextOpened} mode={mode} toggleContext={toggleContext} select={select}/>\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}