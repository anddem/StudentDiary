{"version":3,"sources":["panels/PHolder.js","panels/DateTime.js","panels/SheduleForToday.js","panels/Home.js","panels/GeneralList.js","panels/Day.js","panels/Week.js","panels/Form.js","App.js","index.js"],"names":["PHolder","stretched","icon","header","today","Date","getDay","year","getFullYear","month","getMonth","getTime","now","Math","round","getWeekNumber","SheduleForToday","db","useState","shedule","setShedule","readTransaction","t","executeSql","day","week","success","length","list","Object","keys","map","num","item","time","subject","Today","rows","error","transaction","createNewTable","PHome","id","Home","activePanel","GeneralList","entries","removeList","removeCell","note","index","key","multiline","removable","onRemove","slice","DeleteNote","remove","level","weight","notes","CheckShedule","sheduleList","changeList","daysID","days","Days","go","weekDays","onClick","data-to","Day","left","Main","Week","setActivePanel","e","currentTarget","dataset","to","CheckAndSave","result","document","getElementById","checked","push","checkDay","value","info","len","i","tx","UpdateOrSave","WeekSelect","top","placeholder","setWeek","weeks","status","onChange","DaysSelect","TimeSelect","startTimes","setTime","RequiredFields","setSubject","OptionalFields","FLayout","mode","size","Form","TBarItem","story","text","selected","data-story","TBar","CEpic","activeStory","tabbar","App","window","openDatabase","setActiveStory","bridge","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.813ba065.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Placeholder from '@vkontakte/vkui/dist/components/Placeholder/Placeholder'\r\nimport Icon56FaceIdOutline from '@vkontakte/icons/dist/56/face_id_outline';\r\n\r\nconst PHolder = () => {\r\n    return (\r\n    <Placeholder stretched icon={<Icon56FaceIdOutline/>} header='Сегодня занятий нет, либо расписание не заполнено'>\r\n            Добавить занятия можно на третьей вкладке\r\n        </Placeholder>\r\n    )\r\n}\r\n\r\nexport default PHolder","const Week =  ['Dоскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\nfunction getWeekNumber() {\r\n    let year = new Date().getFullYear();\r\n    let month = new Date().getMonth();\r\n    let today = new Date(year, month, 0).getTime();\r\n    let now = new Date().getTime();\r\n    \r\n    let week = Math.round((now - today) / (1000 * 60 * 60 * 24 * 7));\r\n    return ((week % 2) ? 'Первая' : 'Вторая')\r\n}\r\n\r\nconst today = {\r\n    'day': Week[new Date().getDay()],\r\n    'week': getWeekNumber()\r\n}\r\n\r\nexport default today;","import React, {useState} from 'react';\r\nimport List from '@vkontakte/vkui/dist/components/List/List';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\n\r\nimport PHolder from './PHolder' //Плейсхолдер\r\nimport today from './DateTime' //Получение текущего дня и номера недели\r\n\r\nconst Today = shedule => { //Функция, формирующая расписание на главном экране\r\n    if (shedule.length) { //Если в ответе на запрос есть записи\r\n        const list = Object.keys(shedule).map(num => <Cell>{shedule.item(num).time} {shedule.item(num).subject}</Cell>) //Формируется map из необходимых элементов\r\n        return (<List>{list}</List>) //Возвращается в одном элементе List\r\n    }\r\n    return (<PHolder/>) //Иначе возвращается плейсхолдер\r\n}\r\n\r\nconst createNewTable = (db) => { //создание новой таблицы БД\r\n    db.transaction( //Транзакция на запись\r\n        t => {\r\n            t.executeSql(\"CREATE TABLE shedule (subject TEXT, day TEXT, week TEXT, time TEXT, teacher TEXT, notes TEXT)\") //SQL запрос на создание таблицы с необходимыми столбцами\r\n        }\r\n    )\r\n}\r\n\r\nexport const SheduleForToday = ({db}) => {\r\n    const [shedule, setShedule] = useState(null); //Элемент с расписанием, по умолчанию null\r\n    db.readTransaction( //начало транзакции на чтение\r\n        t => { //Функция транзакции\r\n            t.executeSql( //Выполнить SQL запрос к БД на устройстве\r\n                'SELECT * FROM shedule WHERE day = ? AND (week = ? OR week = \"Обе\") ORDER BY time', [today.day, today.week], //Запрос, подстановки вместо знаков вопроса\r\n                (t, success) => {//Функция, вызываемая при успешном запросе\r\n                    if (shedule === null) {\r\n                        setShedule(Today(success.rows))\r\n                    }\r\n                },\r\n                error => { //Функция, вызываемая при ошибке (обычно один раз при первом запуске приложения на устройстве)\r\n                    createNewTable(db); //Таблица создаётся\r\n                    setShedule(<PHolder/>) //Выводится плейсхолдер\r\n                }\r\n            )\r\n        }\r\n    )\r\n    return (shedule) //Возврат полученного react-элемента\r\n}\r\n","import React from 'react';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\n\r\nimport {SheduleForToday} from './SheduleForToday'\r\n\r\nconst PHome = ({id, db}) => {\r\n  return (\r\n    <Panel id={id}>\r\n      <PanelHeader>\r\n          Дневник студента\r\n      </PanelHeader>\r\n      <SheduleForToday db={db}/>\r\n    </Panel>\r\n  )\r\n}\r\n\r\nconst Home = ({id, db}) => {\r\n    return (\r\n        <View id={id} activePanel='home'>\r\n            <PHome id='home' db={db}/>\r\n        </View>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react'\r\nimport {List, Cell, Div} from '@vkontakte/vkui'\r\nimport {Title, Subhead, Text} from '@vkontakte/vkui'\r\nimport PHolder from './PHolder'\r\n\r\nconst DeleteNote = (db, note) => { //Удаление записи из БД\r\n    db.transaction( //Транзакция на запись\r\n        t => {\r\n            t.executeSql('DELETE FROM shedule WHERE subject = ? and day = ? and week = ? and time = ?', //SQL запрос на удаление\r\n            [note.subject, note.day, note.week, note.time]) //Подстановки вместо знаков вопроса\r\n        }\r\n    )\r\n}\r\n\r\nconst GeneralList = ({db, shedule}) => {\r\n    const [removeList, removeCell] = useState(Object.entries(shedule.rows))\r\n\r\n    const remove = (note, index) => { //Функция при нажатии на удаление занятия\r\n        removeCell([...removeList.slice(0, index), ...removeList.slice(index + 1)]) //Запись удаляется из рендера\r\n        DeleteNote(db, note[1]) //Запись удаляется из БД\r\n    }\r\n\r\n    if (shedule.rows.length) {\r\n        const list = removeList.map((note, index) =>\r\n        <Cell key={note} multiline removable onRemove={() => remove(note, index)}>\r\n            <Title level='1'>{note[1].subject} </Title>\r\n            <Subhead weight='regular'>{note[1].time} | {note[1].week === 'Обе' ? `${note[1].week} недели` : `${note[1].week} неделя`} </Subhead>\r\n            {note[1].notes ? <Text>{note[1].notes}</Text> : null}\r\n        </Cell>)\r\n\r\n        return <List>{list}</List>\r\n    }\r\n    else {\r\n        return (<PHolder/>)\r\n    }\r\n}\r\n\r\nconst CheckShedule = ({db, day}) => {\r\n    const [sheduleList, changeList] = useState(null)\r\n    db.readTransaction(\r\n        t => {\r\n            t.executeSql(\r\n                'SELECT * FROM shedule WHERE day = ? ORDER BY time', [day],\r\n                (t, success) => {\r\n                    if (sheduleList === null) {\r\n                        changeList(<GeneralList db={db} shedule={success}/>)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    )\r\n    return (sheduleList)\r\n}\r\n\r\nexport default CheckShedule","import React from 'react'\r\nimport {Panel, PanelHeader, PanelHeaderBack, Group, CellButton} from '@vkontakte/vkui'\r\n\r\nimport CheckShedule from './GeneralList'\r\n\r\nconst daysID = ['sunday' ,'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\r\nconst days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\nexport const Days = ({go}) => {\r\n    const weekDays = days.map((day, index) => \r\n    <CellButton\r\n        key={daysID[index+1]}\r\n        onClick={go}\r\n        data-to={daysID[index+1]}>\r\n        {day}\r\n    </CellButton>\r\n    );\r\n\r\n    return (\r\n        <Group>\r\n            {weekDays}\r\n        </Group>\r\n    );\r\n}\r\nexport const Day = ({id, day, go, db}) => {\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={go} data-to='main'/>}>\r\n                {day}\r\n            </PanelHeader>\r\n            <CheckShedule db={db} day={day}/>\r\n        </Panel>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {View, Panel, PanelHeader} from '@vkontakte/vkui'\r\n\r\nimport {Days, Day} from './Day'\r\n\r\nconst Main = ({id, go}) => {\r\n    return(\r\n    <Panel id={id}>\r\n        <PanelHeader>\r\n            Расписание\r\n        </PanelHeader>\r\n        \r\n        <Days go={go}/>\r\n    </Panel>\r\n    )\r\n}\r\n\r\nconst Week = ({id, db}) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to)\r\n    }\r\n\r\n    return (\r\n        <View id={id} activePanel={activePanel}>\r\n            <Main id='main' go={go}/>\r\n            <Day id='monday' day='Понедельник' go={go} db={db}/>\r\n            <Day id='tuesday' day='Вторник' go={go} db={db}/>\r\n            <Day id='wednesday' day='Среда' go={go} db={db}/>\r\n            <Day id='thursday' day='Четверг' go={go} db={db}/>\r\n            <Day id='friday' day='Пятница' go={go} db={db}/>\r\n            <Day id='saturday' day='Суббота' go={go} db={db}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Week","import React, { useState } from 'react';\r\nimport {View, Panel, PanelHeader} from '@vkontakte/vkui'\r\nimport {FormLayout, Select, Button, Input, FormLayoutGroup, Checkbox, Textarea} from '@vkontakte/vkui'\r\n\r\nconst checkDay = () => {\r\n    const days =['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\r\n    const result = []\r\n    days.map((day, index) => document.getElementById(`day-${index}`).checked ? result.push(day) : null)\r\n    return result\r\n}\r\n\r\n//subject TEXT, day TEXT, week TEXT, time TEXT, teacher TEXT, notes TEXT\r\n\r\nconst UpdateOrSave = (db, info, len) => {\r\n    db.transaction(\r\n        t=>{\r\n            for (let i = 0; i < len; i++){\r\n                t.executeSql('SELECT * FROM shedule WHERE subject = ? and day = ? and week = ? and time = ?', [info[0], info[1][i], ...info.slice(2, 4)],\r\n                (tx, result) => {\r\n                    if (result.rows.length) {\r\n                        tx.executeSql('UPDATE shedule\\\r\n                                        SET subject = ? day = ?, week = ?, time = ? teacher = ?, notes = ?\\\r\n                                        WHERE  subject = ? and day = ? and week = ? and time = ?', [info[0], info[1][i], ...info.slice(2), info[0], info[1][i], ...info.slice(2, 4)]\r\n                        )\r\n                    }\r\n                    else {\r\n                        tx.executeSql('INSERT INTO shedule values(?, ?, ?, ?, ?, ?)', [info[0], info[1][i], ...info.slice(2)])\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    )\r\n    return true\r\n}\r\nconst CheckAndSave = ({db}) => {\r\n\r\n    const days = checkDay()\r\n    const week = document.getElementById('weekSelect').value\r\n    const time = document.getElementById('timeSelect').value \r\n    const subject = document.getElementById('subject').value\r\n    if(!week || days.length === 0 || !time || !subject) {\r\n        return false\r\n    }\r\n    const teacher = document.getElementById('teacher').value ? document.getElementById('teacher').value : null\r\n    const notes = document.getElementById('notes').value ? document.getElementById('notes').value : null \r\n\r\n    let arr = [subject, days, week, time, teacher, notes]\r\n    return (UpdateOrSave(db, arr, days.length))\r\n}\r\n\r\nconst WeekSelect = ({id, top, placeholder}) => {\r\n    const [week, setWeek] = useState('')\r\n    const weeks = ['Первая', 'Вторая', 'Обе']\r\n\r\n    return (\r\n        <Select id={id} top={top} placeholder={placeholder} value={week} status={week ? 'valid' : 'error'} onChange={(e) => setWeek(e.currentTarget.value)}>\r\n            {Object.keys(weeks).map(week => <option key={week} value={weeks[week]}>{weeks[week]}</option>)}\r\n        </Select>\r\n    )\r\n}\r\n\r\nconst DaysSelect = ({id, top,}) => {\r\n    const week = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\r\n    \r\n    return (\r\n        <FormLayoutGroup  id={id} top={top}>\r\n            {Object.keys(week).map(day =><Checkbox id={`day-${day}`} key={day} value={week[day]}>{week[day]}</Checkbox>)}\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nconst TimeSelect = ({id, top, placeholder}) => {\r\n    const startTimes = ['08:00', '09:40', '11:30', '13:20', '15:00', '16:40']\r\n    const [time, setTime] = useState('')\r\n\r\n    return (\r\n        <Select id={id} top={top} placeholder={placeholder} value={time} status={time ? 'valid' : 'error'} onChange={(e) => setTime(e.currentTarget.value)}>\r\n            {Object.keys(startTimes).map(time => <option key={time} value={startTimes[time]}>{startTimes[time]}</option>)}\r\n        </Select>\r\n    )\r\n}\r\n\r\nconst RequiredFields = ({top}) => {\r\n    const [subject, setSubject] = useState('')\r\n\r\n    return (\r\n        <FormLayout top={top}>\r\n            <WeekSelect id='weekSelect' top='Неделя' placeholder='Выберите неделю'/>\r\n            <DaysSelect id='daysSelect'top='Дни недели'/>\r\n            <TimeSelect id=\"timeSelect\" top='Время начала занятия' placeholder='Выберите время начала занятия'/>\r\n            <Input id='subject' top='Предмет' value={subject} status={subject ? 'valid' : 'error'} onChange={e => setSubject(e.currentTarget.value)}/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nconst OptionalFields = (top) => {\r\n    return (\r\n        <FormLayout top={top}>\r\n            <Input id='teacher' top='Имя преподавателя'/>\r\n            <Textarea id='notes' top='Заметки'/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nconst FLayout = ({db}) => {\r\n    return (\r\n        <FormLayout>\r\n            <RequiredFields top='Обязательные поля'/>\r\n            <OptionalFields top='Опциональные поля'/>\r\n\r\n            <Button mode='commerce' size='xl' onClick={() => CheckAndSave({db})}> \r\n                Сохранить изменения\r\n            </Button>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nconst Form = ({id, db}) => {\r\n    return (\r\n        <View id={id} activePanel='addPair'>\r\n            <Panel id='addPair'>\r\n                <PanelHeader>Добавить занятие</PanelHeader>\r\n                <FLayout db={db}/>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Icon36HomeOutline from '@vkontakte/icons/dist/36/home_outline';\r\nimport Icon36Article from '@vkontakte/icons/dist/36/article';\r\nimport Icon36Add from '@vkontakte/icons/dist/36/add';\r\n\r\nimport Home from './panels/Home';\r\nimport Week from './panels/Week';\r\nimport Form from './panels/Form';\r\n\r\nconst TBarItem = ({onClick, story, text, selected, icon}) => { //Шаблон элемента нижнего меню\r\n\treturn (\r\n\t\t<TabbarItem onClick={onClick} selected={selected === story}\tdata-story={story} text={text}>\r\n\t\t\t\t{icon}\r\n\t\t</TabbarItem>\r\n\t)\r\n}\r\n\r\nconst TBar = ({onClick, selected}) => { //Нижнее меню\r\n\treturn (\r\n\t<Tabbar>\r\n\t\t<TBarItem story='today' text='Сегодня' onClick={onClick} selected={selected} icon={<Icon36HomeOutline/>}/>\r\n\t\t<TBarItem story='week' text='Неделя' onClick={onClick} selected={selected} icon={<Icon36Article/>}/>\r\n\t\t<TBarItem story='form' text='Добавить занятие' onClick={onClick} selected={selected} icon={<Icon36Add/>}/>\r\n\t</Tabbar>\r\n\t)\r\n}\r\n\r\nconst CEpic = ({activeStory, onClick, db}) =>\r\n\t<Epic activeStory={activeStory} tabbar={<TBar selected={activeStory} onClick={onClick}/>}>\r\n\t\t<Home id='today' db={db}/>\r\n\t\t<Week id='week' db={db}/>\r\n\t\t<Form id='form' db={db}/>\r\n\t</Epic>\r\n\r\nconst App = () => { //Основа приложения\r\n\tconst db = window.openDatabase('studentdiaryshedule', '1.0', 'Database for shedule in student diary.', 1*1024*1024); //База данных WebSQL\r\n\tconst [activeStory, setActiveStory] = useState('today'); //id элемента, который необходимо рендерить в данный момент\r\n\r\n\tconst onStoryChange = e => {\r\n\t\tsetActiveStory(e.currentTarget.dataset.story)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CEpic activeStory={activeStory} onClick={onStoryChange} db={db}/>\r\n\t);\r\n}\r\n\r\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}