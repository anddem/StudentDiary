{"version":3,"sources":["panels/Home.js","panels/Shedule.js","App.js","index.js"],"names":["Home","id","today","Date","useState","activePanel","getDay","day","daysID","days","Days","go","weekDays","map","index","before","key","onClick","data-to","header","mode","Today","Day","onBackClick","left","Shedule","setActivePanel","e","currentTarget","dataset","to","App","activeStory","setActiveStory","onStoryChange","story","tabbar","selected","data-story","text","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1bdc067.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\n\r\nconst Home = ({id}) => {\r\n  const days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\r\n  const today = new Date();\r\n\r\n  const [activePanel, setActivePanel] = useState('home');\r\n  const [day, setToday] = useState(days[today.getDay()]);\r\n\r\n  return (\r\n    <View id={id} activePanel={activePanel}>\r\n      <Panel id='home'>\r\n        <PanelHeader>\r\n            Дневник студента\r\n        </PanelHeader>\r\n        <Header>\r\n          Сегодня {day}\r\n        </Header>\r\n      </Panel>\r\n    </View>\r\n  )\r\n};\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Group, CellButton, View, Header } from '@vkontakte/vkui';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\n\r\nconst daysID = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\r\nconst days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\n\r\nconst Days = ({go}) => {\r\n    const weekDays = days.map((day, index) => \r\n    <CellButton\r\n        before={<Today day={daysID[index]}/>}\r\n        key={daysID[index]}\r\n        onClick={go}\r\n        data-to={daysID[index]}>\r\n        {day}\r\n    </CellButton>\r\n    );\r\n\r\n    return (\r\n        <Group header={<Header mode='secondary'>Дни недели</Header>}>\r\n            {weekDays}\r\n        </Group>\r\n    );\r\n}\r\n\r\nconst Today = ({day}) => {\r\n    const today = new Date();\r\n\r\n    return (\r\n        day === daysID[today.getDay()+1] ? <Icon24Chevron/> : null\r\n    )\r\n}\r\nconst Day = ({id, day, onBackClick}) => {\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={onBackClick} data-to='main'/>}>\r\n                {day}\r\n            </PanelHeader>\r\n\r\n            Тело панели {day}\r\n        </Panel>\r\n    )\r\n}\r\n\r\nconst Shedule = ({id}) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to)\r\n    }\r\n\r\n    return (\r\n        <View id={id} activePanel={activePanel}>\r\n            <Panel id='main'>\r\n                <PanelHeader>\r\n                    Расписание\r\n                </PanelHeader>\r\n\r\n                <Days go={go}/>\r\n            </Panel>\r\n            <Day id='monday' day='Понедельник' onBackClick={go}/>\r\n            <Day id='tuesday' day='Вторник' onBackClick={go}/>\r\n            <Day id='wednesday' day='Среда' onBackClick={go}/>\r\n            <Day id='thursday' day='Четверг' onBackClick={go}/>\r\n            <Day id='friday' day='Пятница' onBackClick={go}/>\r\n            <Day id='saturday' day='Суббота' onBackClick={go}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nShedule.propTypes = {\r\n    id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Shedule;","import React, { useState } from 'react';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Icon36HomeOutline from '@vkontakte/icons/dist/36/home_outline';\r\nimport Icon36Article from '@vkontakte/icons/dist/36/article';\r\n\r\nimport Home from './panels/Home';\r\nimport Shedule from './panels/Shedule';\r\n\r\nconst App = () => {\r\n\tconst [activeStory, setActiveStory] = useState('today')\r\n\r\n\tconst onStoryChange = e => {\r\n\t\tsetActiveStory(e.currentTarget.dataset.story)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Epic activeStory={activeStory} tabbar={\r\n\t\t\t<Tabbar>\r\n\t\t\t\t<TabbarItem\r\n\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\tselected={activeStory === 'today'}\r\n\t\t\t\tdata-story='today'\r\n\t\t\t\ttext='Сегодня'>\r\n\t\t\t\t\t<Icon36HomeOutline />\r\n\t\t\t\t</TabbarItem>\r\n\t\t\t\t<TabbarItem\r\n\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\tselected={activeStory === 'shedule'}\r\n\t\t\t\tdata-story='shedule'\r\n\t\t\t\ttext='Неделя'>\r\n\t\t\t\t\t<Icon36Article />\r\n\t\t\t\t</TabbarItem>\r\n\t\t\t</Tabbar>\r\n\t\t}>\r\n\r\n\t\t\t<Home id='today'/>\r\n\t\t\t<Shedule id='shedule'/>\r\n\t\t</Epic>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n*/","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}