{"version":3,"sources":["panels/PHolder.js","panels/SheduleForToday.js","panels/Home.js","panels/GeneralList.js","panels/Day.js","panels/Week.js","panels/Form.js","App.js","index.js"],"names":["PHolder","go","stretched","icon","header","SheduleForToday","db","day","useState","shedule","setShedule","readTransaction","t","executeSql","success","length","list","Object","keys","map","num","item","time","subject","Today","rows","error","transaction","createNewShedule","PHome","id","Home","Date","getDay","activePanel","GeneralList","entries","removeList","removeCell","remove","note","index","slice","console","log","week","teacher","notes","DeleteNode","key","multiline","removable","onRemove","CheckShedule","sheduleList","changeList","daysID","days","Days","weekDays","onClick","data-to","Day","left","Main","Week","setActivePanel","e","currentTarget","dataset","to","CheckAndSave","result","document","getElementById","checked","push","checkDay","value","info","len","i","tx","UpdateOrSave","WeekSelect","top","placeholder","setWeek","weeks","status","onChange","DaysSelect","TimeSelect","startTimes","setTime","RequiredFields","setSubject","OptionalFields","FLayout","mode","size","Form","TBarItem","story","text","selected","data-story","TBar","App","window","openDatabase","activeStory","setActiveStory","tabbar","bridge","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.93e4df42.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Placeholder from '@vkontakte/vkui/dist/components/Placeholder/Placeholder'\r\nimport Icon56FaceIdOutline from '@vkontakte/icons/dist/56/face_id_outline';\r\n\r\nconst PHolder = ({go}) => {\r\n    return (\r\n    <Placeholder stretched icon={<Icon56FaceIdOutline/>} header='Сегодня занятий нет, либо расписание не заполнено'>\r\n            Добавить занятия можно на третьей вкладке\r\n        </Placeholder>\r\n    )\r\n}\r\n\r\nexport default PHolder","import React, {useState} from 'react';\r\n\r\nimport List from '@vkontakte/vkui/dist/components/List/List';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\n\r\n\r\nimport PHolder from './PHolder'\r\n\r\nconst Today = shedule => { //Функция, формирующая расписание на главном экране\r\n    if (shedule.length) { //Если в ответе на запрос есть записи\r\n      const list = Object.keys(shedule).map((num) => <Cell>{shedule.item(num).time} {shedule.item(num).subject}</Cell>) //Формируется map из необходимых элементов\r\n      return (<List>{list}</List>) //Возвращается в одном элементе Group\r\n    }\r\n      return (<PHolder/>) //Иначе возвращается плейсхолдер\r\n  }\r\n  \r\nconst createNewShedule = (db) => { //создание новой таблицы БД\r\n      db.transaction( //Транзакция на запись\r\n          t => {\r\n            t.executeSql(\"CREATE TABLE shedule (subject TEXT, day TEXT, week TEXT, time TEXT, teacher TEXT, notes TEXT)\") //SQL запрос на создание таблицы с необходимыми полями\r\n          }\r\n      )\r\n}\r\n\r\nexport const SheduleForToday = ({db, day}) => {\r\n    const [shedule, setShedule] = useState(null); //Элемент с расписанием, по умолчанию null\r\n    db.readTransaction( //начало транзакции на чтение\r\n      t => { //lamиda-функция транзакции\r\n        t.executeSql( //Выполнить SQL запрос к БД на устройстве\r\n            'SELECT * FROM shedule WHERE LOWER(day) = ? ORDER BY time', [day], //Запрос, подстановки вместо знаков вопроса\r\n            (t, success) => {//lambda-функция, вызываемая при успешном запросе\r\n            if (shedule === null) { setShedule(Today(success.rows)) }\r\n            },\r\n            error => { //lambda-функция, вызываемая при ошибке (обычно один раз при первом запуске приложения)\r\n            createNewShedule(db);\r\n            }\r\n        )\r\n      }\r\n    )\r\n  \r\n    return (shedule) //Возврат полученного react-элемента\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\n\r\nimport {SheduleForToday} from './SheduleForToday'\r\n\r\nconst PHome = ({id, db, day}) => {\r\n  return (\r\n    <Panel id={id}>\r\n      <PanelHeader>\r\n          Дневник студента\r\n      </PanelHeader>\r\n      <SheduleForToday db={db} day={day}/>\r\n    </Panel>\r\n  )\r\n}\r\n\r\nconst Home = ({id, db}) => {\r\n    const days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\r\n    const activePanel  = 'home';\r\n    const day = days[new Date().getDay()];\r\n\r\n    return (\r\n        <View id={id} activePanel={activePanel}>\r\n            <PHome id='home' db={db} day={day}/>\r\n        </View>\r\n    )\r\n};\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react'\r\nimport {List, Cell, SimpleCell} from '@vkontakte/vkui'\r\n\r\nconst DeleteNode = (db, note) => {\r\n    console.log(note)\r\n    db.transaction(\r\n        t => {\r\n            t.executeSql('DELETE FROM shedule WHERE subject = ? and day = ? and week = ? and time = ? and teacher = ? and notes = ?',\r\n            [note.subject, note.day, note.week, note.time, note.teacher, note.notes])\r\n        }\r\n    )\r\n}\r\n\r\nconst GeneralList = ({db, shedule}) => {\r\n    const [removeList, removeCell] = useState(Object.entries(shedule.rows))\r\n\r\n    const remove = (note, index) => {\r\n        removeCell([...removeList.slice(0, index), ...removeList.slice(index + 1)])\r\n        DeleteNode(db, note[1])\r\n    }\r\n\r\n    if (shedule.rows.length) {\r\n        const list = removeList.map((note, index) =>\r\n        <Cell key={note} multiline removable onRemove={() => remove(note, index)}>\r\n            {note[1].time} {note[1].subject}\r\n        </Cell>)\r\n\r\n        return <List>{list}</List>\r\n    }\r\n    else {\r\n        return (<SimpleCell>Занятий нет</SimpleCell>)\r\n    }\r\n}\r\n\r\nconst CheckShedule = ({db, day}) => {\r\n    const [sheduleList, changeList] = useState(null)\r\n    db.readTransaction(\r\n        t => {\r\n            t.executeSql(\r\n                'SELECT * FROM shedule WHERE LOWER(day) = ? ORDER BY time', [day],\r\n                (t, success) => {\r\n                    if (sheduleList === null) {\r\n                        changeList(<GeneralList db={db} shedule={success}/>)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    )\r\n    return (sheduleList)\r\n}\r\n\r\nexport default CheckShedule","import React from 'react'\r\nimport {Panel, PanelHeader, PanelHeaderBack, Group, CellButton} from '@vkontakte/vkui'\r\n\r\nimport CheckShedule from './GeneralList'\r\n\r\nconst daysID = ['sunday' ,'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\r\nconst days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\nexport const Days = ({go}) => {\r\n    const weekDays = days.map((day, index) => \r\n    <CellButton\r\n        key={daysID[index+1]}\r\n        onClick={go}\r\n        data-to={daysID[index+1]}>\r\n        {day}\r\n    </CellButton>\r\n    );\r\n\r\n    return (\r\n        <Group>\r\n            {weekDays}\r\n        </Group>\r\n    );\r\n}\r\nexport const Day = ({id, day, go, db}) => {\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={go} data-to='main'/>}>\r\n                {day}\r\n            </PanelHeader>\r\n            <CheckShedule db={db} day={day}/>\r\n        </Panel>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {View, Panel, PanelHeader} from '@vkontakte/vkui'\r\n\r\nimport {Days, Day} from './Day'\r\n\r\nconst Main = ({id, go}) => {\r\n    return(\r\n    <Panel id={id}>\r\n        <PanelHeader>\r\n            Расписание\r\n        </PanelHeader>\r\n        \r\n        <Days go={go}/>\r\n    </Panel>\r\n    )\r\n}\r\n\r\nconst Week = ({id, db}) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to)\r\n    }\r\n\r\n    return (\r\n        <View id={id} activePanel={activePanel}>\r\n            <Main id='main' go={go}/>\r\n            <Day id='monday' day='понедельник' go={go} db={db}/>\r\n            <Day id='tuesday' day='вторник' go={go} db={db}/>\r\n            <Day id='wednesday' day='среда' go={go} db={db}/>\r\n            <Day id='thursday' day='четверг' go={go} db={db}/>\r\n            <Day id='friday' day='пятница' go={go} db={db}/>\r\n            <Day id='saturday' day='суббота' go={go} db={db}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Week","import React, { useState } from 'react';\r\nimport {View, Panel, PanelHeader} from '@vkontakte/vkui'\r\nimport {FormLayout, Select, Button, Input, FormLayoutGroup, Checkbox, Textarea} from '@vkontakte/vkui'\r\n\r\nconst checkDay = () => {\r\n    const days =['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\r\n    const result = []\r\n    days.map((day, index) => document.getElementById(`day-${index}`).checked ? result.push(day) : null)\r\n    return result\r\n}\r\n\r\n//subject TEXT, day TEXT, week TEXT, time TEXT, teacher TEXT, notes TEXT\r\n\r\nconst UpdateOrSave = (db, info, len) => {\r\n    db.transaction(\r\n        t=>{\r\n            for (let i = 0; i < len; i++){\r\n                t.executeSql('SELECT * FROM shedule WHERE subject = ? and day = ? and week = ? and time = ?', [info[0], info[1][i], ...info.slice(2, 4)],\r\n                (tx, result) => {\r\n                    if (result.rows.length) {\r\n                        tx.executeSql('UPDATE shedule\\\r\n                                        SET subject = ? day = ?, week = ?, time = ? teacher = ?, notes = ?\\\r\n                                        WHERE  subject = ? and day = ? and week = ? and time = ?', [info[0], info[1][i], ...info.slice(2), info[0], info[1][i], ...info.slice(2, 4)]\r\n                        )\r\n                    }\r\n                    else {\r\n                        tx.executeSql('INSERT INTO shedule values(?, ?, ?, ?, ?, ?)', [info[0], info[1][i], ...info.slice(2)])\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    )\r\n    return true\r\n}\r\nconst CheckAndSave = ({db}) => {\r\n\r\n    const days = checkDay()\r\n    const week = document.getElementById('weekSelect').value\r\n    const time = document.getElementById('timeSelect').value \r\n    const subject = document.getElementById('subject').value\r\n    if(!week || days.length === 0 || !time || !subject) {\r\n        return false\r\n    }\r\n    const teacher = document.getElementById('teacher').value ? document.getElementById('teacher').value : null\r\n    const notes = document.getElementById('notes').value ? document.getElementById('notes').value : null \r\n\r\n    let arr = [subject, days, week, time, teacher, notes]\r\n    return (UpdateOrSave(db, arr, days.length))\r\n}\r\n\r\nconst WeekSelect = ({id, top, placeholder}) => {\r\n    const [week, setWeek] = useState('')\r\n    const weeks = ['Первая', 'Вторая', 'Обе']\r\n\r\n    return (\r\n        <Select id={id} top={top} placeholder={placeholder} value={week} status={week ? 'valid' : 'error'} onChange={(e) => setWeek(e.currentTarget.value)}>\r\n            {Object.keys(weeks).map(week => <option key={week} value={weeks[week]}>{weeks[week]}</option>)}\r\n        </Select>\r\n    )\r\n}\r\n\r\nconst DaysSelect = ({top, id}) => {\r\n    const week = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\r\n    \r\n    return (\r\n        <FormLayoutGroup top={top} id={id}>\r\n            {Object.keys(week).map(day =><Checkbox id={`day-${day}`} key={day} value={week[day]}>{week[day]}</Checkbox>)}\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nconst TimeSelect = ({id, top, placeholder}) => {\r\n    const startTimes = ['08:00', '09:40', '11:30', '13:20', '15:00', '16:40']\r\n    const [time, setTime] = useState('')\r\n\r\n    return (\r\n        <Select id={id} top={top} placeholder={placeholder} value={time} status={time ? 'valid' : 'error'} onChange={(e) => setTime(e.currentTarget.value)}>\r\n            {Object.keys(startTimes).map(time => <option key={time} value={startTimes[time]}>{startTimes[time]}</option>)}\r\n        </Select>\r\n    )\r\n}\r\n\r\nconst RequiredFields = ({top}) => {\r\n    const [subject, setSubject] = useState('')\r\n\r\n    return (\r\n        <FormLayout top={top}>\r\n            <WeekSelect id='weekSelect' top='Неделя' placeholder='Выберите неделю'/>\r\n            <DaysSelect id='daysSelect'top='Дни недели'/>\r\n            <TimeSelect id=\"timeSelect\" top='Время начала занятия' placeholder='Выберите время начала занятия'/>\r\n            <Input id='subject' top='Предмет' value={subject} status={subject ? 'valid' : 'error'} onChange={e => setSubject(e.currentTarget.value)}/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nconst OptionalFields = (top) => {\r\n    return (\r\n        <FormLayout top={top}>\r\n            <Input id='teacher' top='Имя преподавателя'/>\r\n            <Textarea id='notes' top='Заметки'/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nconst FLayout = ({db}) => {\r\n    return (\r\n        <FormLayout>\r\n            <RequiredFields top='Обязательные поля'/>\r\n            <OptionalFields top='Опциональные поля'/>\r\n\r\n            <Button mode='commerce' size='xl' onClick={() => CheckAndSave({db})}> \r\n                Сохранить изменения\r\n            </Button>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nconst Form = ({id, db}) => {\r\n    return (\r\n        <View id={id} activePanel='addPair'>\r\n            <Panel id='addPair'>\r\n                <PanelHeader>Добавить занятие</PanelHeader>\r\n                <FLayout db={db}/>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Icon36HomeOutline from '@vkontakte/icons/dist/36/home_outline';\r\nimport Icon36Article from '@vkontakte/icons/dist/36/article';\r\nimport Icon36Add from '@vkontakte/icons/dist/36/add';\r\n\r\nimport Home from './panels/Home';\r\nimport Week from './panels/Week';\r\nimport Form from './panels/Form';\r\n\r\nconst TBarItem = ({onClick, story, text, selected, icon}) => {\r\n\treturn (\r\n\t\t<TabbarItem onClick={onClick} selected={selected === story}\tdata-story={story} text={text}>\r\n\t\t\t\t{icon}\r\n\t\t</TabbarItem>\r\n\t)\r\n}\r\n\r\nconst TBar = ({onClick, selected}) => {\r\n\treturn (\r\n\t<Tabbar>\r\n\t\t<TBarItem story='today' text='Сегодня' onClick={onClick} selected={selected} icon={<Icon36HomeOutline/>}/>\r\n\t\t<TBarItem story='week' text='Неделя' onClick={onClick} selected={selected} icon={<Icon36Article/>}/>\r\n\t\t<TBarItem story='form' text='Добавить занятие' onClick={onClick} selected={selected} icon={<Icon36Add/>}/>\r\n\t</Tabbar>\r\n\t)\r\n}\r\n\r\nconst App = () => {\r\n\tconst db = window.openDatabase('studentdiaryshedule', '1.0', 'Database for shedule in student diary.', 1*1024*1024);\r\n\tconst [activeStory, setActiveStory] = useState('today');\r\n\r\n\tconst onStoryChange = e => {\r\n\t\tsetActiveStory(e.currentTarget.dataset.story)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Epic activeStory={activeStory} tabbar={\r\n\t\t\t<TBar selected={activeStory} onClick={onStoryChange} />\r\n\t\t\t}>\r\n\r\n\t\t\t<Home id='today' db={db}/>\r\n\t\t\t<Week id='week' db={db}/>\r\n\t\t\t<Form id='form' db={db}/>\r\n\t\t</Epic>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n*/","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}