{"version":3,"sources":["panels/Home.js","panels/WeekDays.js","App.js","index.js"],"names":["Home","props","id","onClick","go","data-to","Day","day","App","useState","activePanel","setActivePanel","activeStory","setActiveStory","date","Date","getDay","e","currentTarget","dataset","to","onStoryChange","story","tabbar","selected","data-story","text","today","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"6pBAuBeA,EAjBF,SAACC,GAAD,OACZ,kBAAC,IAAD,CAAOC,GAAID,EAAMC,IACd,kBAAC,IAAD,oGAGA,kBAAC,IAAD,CAAYC,QAASF,EAAMG,GAAIC,UAAQ,YAAvC,oE,QC0CWC,EA7CH,SAACL,GACT,OACI,kBAAC,IAAD,CAAOC,GAAID,EAAMC,IACb,kBAAC,IAAD,KACKD,EAAMM,KAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,2EAGA,kBAAC,IAAD,CAAYJ,QAbb,GAaC,8CAGA,kBAAC,IAAD,CAAYA,QAhBb,GAgBC,kCAGA,kBAAC,IAAD,CAAYA,QAnBb,GAmBC,8CAGA,kBAAC,IAAD,CAAYA,QAtBb,GAsBC,8CAGA,kBAAC,IAAD,CAAYA,QAzBb,GAyBC,+CAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,sLACuCF,EAAMM,IAD7C,MAIJ,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYJ,QAASF,EAAMG,GAAIC,UAAQ,QAAvC,qECpBR,IA6CeG,EA7CH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEqBF,mBAAS,SAF9B,mBAEVG,EAFU,KAEGC,EAFH,KAIbC,EAVU,CAAC,qEAAe,qEAAe,6CAAW,iCAAS,6CAAW,6CAAW,+CAC1E,IAAIC,MAAOC,UAWlBZ,EAAK,SAAAa,GACVN,EAAeM,EAAEC,cAAcC,QAAQC,KAGlCC,EAAgB,SAAAJ,GACrBJ,EAAeI,EAAEC,cAAcC,QAAQG,QAGxC,OACC,kBAAC,IAAD,CAAMV,YAAaA,EAAaW,OAC/B,kBAAC,IAAD,KACC,kBAAC,IAAD,CACApB,QAASkB,EACTG,SAA0B,UAAhBZ,EACVa,aAAW,QACXC,KAAK,8CACJ,kBAAC,IAAD,OAED,kBAAC,IAAD,CACAvB,QAASkB,EACTG,SAA0B,SAAhBZ,EACVa,aAAW,OACXC,KAAK,wCACJ,kBAAC,IAAD,SAKF,kBAAC,IAAD,CAAMxB,GAAG,QAAQQ,YAAaA,GAC7B,kBAAC,EAAD,CAAMR,GAAG,OAAOE,GAAIA,EAAIuB,MAAOb,KAGhC,kBAAC,IAAD,CAAMZ,GAAG,OAAOQ,YAAaA,GAC5B,kBAAC,EAAD,CAAKR,GAAG,OAAOE,GAAIA,EAAIG,IAAKO,OCnDhCc,IAAOC,KAAK,gBAEZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0fae0a2c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\n\nconst Home = (props) => (\n\t<Panel id={props.id}>\n    <PanelHeader>\n        Дневник студента\n    </PanelHeader>\n    <CellButton onClick={props.go} data-to='weekdays'>\n      Перейти на View 2\n    </CellButton>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n\ttoday: PropTypes.string.isRequired\n};\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, Group, Header, CellButton } from '@vkontakte/vkui';\r\n\r\nconst selectDay = (props) => {\r\n    return 0\r\n}\r\n\r\nconst Day = (props) => {\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>\r\n                {props.day}\r\n            </PanelHeader>\r\n        <Group>\r\n            <CellButton>\r\n                Понедельник\r\n            </CellButton>\r\n            <CellButton onClick={selectDay('Вторник')}>\r\n                Вторник\r\n            </CellButton>\r\n            <CellButton onClick={selectDay('Среда')}>\r\n                Среда\r\n            </CellButton>\r\n            <CellButton onClick={selectDay('Четверг')}>\r\n                Четверг\r\n            </CellButton>\r\n            <CellButton onClick={selectDay('Пятница')}>\r\n                Пятница\r\n            </CellButton>\r\n            <CellButton onClick={selectDay('Суббота')}>\r\n                Суббота\r\n            </CellButton>\r\n        </Group>\r\n        <Group>\r\n            <Header>\r\n                Если судить по заголовку, сегодня {props.day}!\r\n            </Header>\r\n        </Group>\r\n        <Group>\r\n        <CellButton onClick={props.go} data-to='home'>\r\n            Перейти на View 1\r\n        </CellButton>\r\n        </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nDay.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Day;","import React, { useState } from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Icon36HomeOutline from '@vkontakte/icons/dist/36/home_outline';\nimport Icon36Article from '@vkontakte/icons/dist/36/article';\n\nimport Home from './panels/Home';\nimport Day from './panels/WeekDays';\n\nfunction getWeekDay() {\n    var days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\n    var day = new Date().getDay();\n\n    return days[day];\n}\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [activeStory, setActiveStory] = useState('today')\n\n\tvar date = getWeekDay();\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to)\n\t}\n\n\tconst onStoryChange = e => {\n\t\tsetActiveStory(e.currentTarget.dataset.story)\n\t}\n\n\treturn (\n\t\t<Epic activeStory={activeStory} tabbar={\n\t\t\t<Tabbar>\n\t\t\t\t<TabbarItem\n\t\t\t\tonClick={onStoryChange}\n\t\t\t\tselected={activeStory === 'today'}\n\t\t\t\tdata-story='today'\n\t\t\t\ttext='Сегодня'>\n\t\t\t\t\t<Icon36HomeOutline />\n\t\t\t\t</TabbarItem>\n\t\t\t\t<TabbarItem\n\t\t\t\tonClick={onStoryChange}\n\t\t\t\tselected={activeStory === 'week'}\n\t\t\t\tdata-story='week'\n\t\t\t\ttext='Неделя'>\n\t\t\t\t\t<Icon36Article />\n\t\t\t\t</TabbarItem>\n\t\t\t</Tabbar>\n\t\t}>\n\n\t\t\t<View id='today' activePanel={activePanel}>\n\t\t\t\t<Home id='home' go={go} today={date}/>\n\t\t\t</View>\n\n\t\t\t<View id='week' activePanel={activePanel}>\n\t\t\t\t<Day id='home' go={go} day={date}/>\n\t\t\t</View>\n\t\t</Epic>\n\t);\n}\n\nexport default App;\n\n/*\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n*/","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}