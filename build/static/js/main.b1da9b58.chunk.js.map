{"version":3,"sources":["panels/Home.js","panels/Shedule.js","App.js","index.js"],"names":["Home","id","today","Date","useState","activePanel","getDay","day","daysID","days","Days","go","weekDays","map","index","before","key","onClick","data-to","Today","Day","store","week","require","get","set","left","placeholder","value","mode","size","console","log","document","getElementById","Shedule","setActivePanel","lastDay","setWeek","e","currentTarget","dataset","from","to","App","activeStory","setActiveStory","onStoryChange","story","tabbar","selected","data-story","text","bridge","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.b1da9b58.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\n\r\nconst Home = ({id}) => {\r\n  const days = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\r\n  const today = new Date();\r\n\r\n  const [activePanel, setActivePanel] = useState('home');\r\n  const [day, setToday] = useState(days[today.getDay()]);\r\n\r\n  return (\r\n    <View id={id} activePanel={activePanel}>\r\n      <Panel id='home'>\r\n        <PanelHeader>\r\n            Дневник студента\r\n        </PanelHeader>\r\n        <Header>\r\n          Сегодня {day}\r\n        </Header>\r\n      </Panel>\r\n    </View>\r\n  )\r\n};\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Group, CellButton, View, Button } from '@vkontakte/vkui';\r\nimport {FormLayout, Select, Input, List} from '@vkontakte/vkui'\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done'\r\n\r\nconst daysID = ['sunday' ,'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\r\nconst days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\nconst Days = ({go}) => {\r\n    const weekDays = days.map((day, index) => \r\n    <CellButton\r\n        before={<Today day={daysID[index+1]}/>}\r\n        key={daysID[index+1]}\r\n        onClick={go}\r\n        data-to={daysID[index+1]}>\r\n        {day}\r\n    </CellButton>\r\n    );\r\n\r\n    return (\r\n        <Group>\r\n            {weekDays}\r\n        </Group>\r\n    );\r\n}\r\n\r\nconst Pair = ({number}) => {\r\n\r\n}\r\n\r\nconst Today = ({day}) => {\r\n    const today = new Date();\r\n\r\n    return (\r\n        day === daysID[today.getDay()] ? <Icon24Chevron/> : null\r\n    )\r\n}\r\nconst Day = ({id, day, go, week}) => {\r\n\r\n    var store = require('store');\r\n\r\n    if (!store.get({id})) {\r\n        store.set({id})\r\n    }\r\n\r\n    const saveToStore = (e) => {\r\n        store.set({id}, {})\r\n    }\r\n\r\n    const foo = () => {\r\n        console.log(document.getElementById('choiceWeek').value)\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={go} data-to='main'/>}>\r\n                {day}\r\n            </PanelHeader>\r\n            <FormLayout>\r\n                <Select id=\"choiceWeek\" placeholder='Выберите неделю'>\r\n                    <option value='fst'>Первая</option>\r\n                    <option value='snd'>Вторая</option>\r\n                    <option value='all'>Обе</option>\r\n                </Select>\r\n\r\n                <Button mode='commerce' size='xl' onClick={foo}>Сохранить изменения</Button>\r\n            </FormLayout>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nconst Shedule = ({id}) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n    const [day, lastDay] = useState(null)\r\n    const [week, setWeek] = useState('');\r\n\r\n    const go = e => {\r\n        if (e.currentTarget.dataset.from) {\r\n            lastDay(e.currentTarget.dataset.from)\r\n        }\r\n        if (e.currentTarget.dataset.week) {\r\n            setWeek(e.currentTarget.dataset.week)\r\n        }\r\n        setActivePanel(e.currentTarget.dataset.to)\r\n    }\r\n\r\n    return (\r\n        <View id={id} activePanel={activePanel}>\r\n            <Panel id='main'>\r\n                <PanelHeader>\r\n                    Расписание\r\n                </PanelHeader>\r\n\r\n                <Days go={go}/>\r\n            </Panel>\r\n            <Day id='monday' day='Понедельник' go={go}/>\r\n            <Day id='tuesday' day='Вторник' go={go}/>\r\n            <Day id='wednesday' day='Среда' go={go}/>\r\n            <Day id='thursday' day='Четверг' go={go}/>\r\n            <Day id='friday' day='Пятница' go={go}/>\r\n            <Day id='saturday' day='Суббота' go={go}/>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nShedule.propTypes = {\r\n    id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Shedule;","import React, { useState } from 'react';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Icon36HomeOutline from '@vkontakte/icons/dist/36/home_outline';\r\nimport Icon36Article from '@vkontakte/icons/dist/36/article';\r\n\r\nimport Home from './panels/Home';\r\nimport Shedule from './panels/Shedule';\r\n\r\nconst App = () => {\r\n\tconst [activeStory, setActiveStory] = useState('today')\r\n\r\n\tconst onStoryChange = e => {\r\n\t\tsetActiveStory(e.currentTarget.dataset.story)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Epic activeStory={activeStory} tabbar={\r\n\t\t\t<Tabbar>\r\n\t\t\t\t<TabbarItem\r\n\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\tselected={activeStory === 'today'}\r\n\t\t\t\tdata-story='today'\r\n\t\t\t\ttext='Сегодня'>\r\n\t\t\t\t\t<Icon36HomeOutline />\r\n\t\t\t\t</TabbarItem>\r\n\t\t\t\t<TabbarItem\r\n\t\t\t\tonClick={onStoryChange}\r\n\t\t\t\tselected={activeStory === 'shedule'}\r\n\t\t\t\tdata-story='shedule'\r\n\t\t\t\ttext='Неделя'>\r\n\t\t\t\t\t<Icon36Article />\r\n\t\t\t\t</TabbarItem>\r\n\t\t\t</Tabbar>\r\n\t\t}>\r\n\r\n\t\t\t<Home id='today'/>\r\n\t\t\t<Shedule id='shedule'/>\r\n\t\t</Epic>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n*/","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}